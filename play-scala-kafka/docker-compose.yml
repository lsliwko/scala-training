version: '3'
name: 'play-scala-kafka'  # containers are prefixed with name

networks:
  app-tier:
    driver: bridge

services:

  # Kafka broker
  kafka:
    image: 'bitnami/kafka:3.4'
    networks:
      - app-tier
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  # Creates Kafka topics
  kafka-init-topics:
    image: 'bitnami/kafka:3.4'
    command: "/opt/bitnami/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic play-scala-kafka-topic"
    depends_on:
      kafka:
        condition: service_started
    networks:
      - app-tier

  # Main application
  app:
    build: .  # build from local Dockerfile
    restart: always
    depends_on:
      kafka-init-topics:
        condition: service_completed_successfully
    ports:
      - 9000:9000
    networks:
      - app-tier